name: CI/CD

on:
  push:
    branches: main
    paths-ignore:
      - '.devcontainer/**'
      - '.github/dependabot.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

env:
  REGISTRY: ghcr.io # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint codebase
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup

      - name: Run linter
        run: npm run lint

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Lint codebase [skip ci]'

  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup

      - name: Execute tests
        run: npm test

  build:
    name: Build the static website
    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup

      - name: Build the static files
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build/'

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs:
      - build
    outputs:
      digest: ${{ steps.build-push.outputs.digest }}
    permissions:
      contents: read
      packages: write
    concurrency: github-packages
    environment:
      name: github-packages
      url: https://github.com/corentin-regent/portfolio/pkgs/container/portfolio
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  audit-dev:
    name: Run Lighthouse audits on a local webserver
    runs-on: ubuntu-latest
    needs:
      - docker
      - build

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Pull Docker image
        env:
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.docker.outputs.digest }}
        run: |
          docker pull ${{ env.IMAGE }}
          docker tag ${{ env.IMAGE }} portfolio

      - name: Run Lighthouse audits
        uses: ./.github/actions/lighthouse
        id: lighthouse
        with:
          config-path: ./lighthouse-dev.config.json
          root-url: http://localhost/
          artifact-name: lighthouse-results-dev

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - audit-dev
    permissions:
      pages: write
      id-token: write
    concurrency: github-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
